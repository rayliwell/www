name: Deploy to production

on:
  push:
    branches:
      - 'main'

jobs:
  build:
    name: Build project
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/build.yml

  deploy_pages:
    name: Deploy to Cloudflare Pages
    needs: build
    environment:
      name: Production
      url: ${{ steps.publish.outputs.url }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      deployments: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install nix package manager
        uses: nixbuild/nix-quick-install-action@v27
      - name: Fetch cached nix store
        uses: nix-community/cache-nix-action@v5
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/package-lock.json') }}
          restore-prefixes-first-match: nix-${{ runner.os }}
      - name: Use `wrangler` to push to Cloudflare Pages
        run: echo "url=$(nix run .#deployToCloudflareWorkers | grep -Po '\S+pages.dev$')" >> $GITHUB_OUTPUT
        id: publish
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

  deploy_container:
    name: Deploy container to the GitHub Container registry
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install nix package manager
        uses: nixbuild/nix-quick-install-action@v27
      - name: Fetch cached nix store
        uses: nix-community/cache-nix-action@v5
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/package-lock.json') }}
          restore-prefixes-first-match: nix-${{ runner.os }}
      - name: Use `docker` CLI to push container to the registry
        run: nix run .#deployToContainerRegistry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIHTUB_ACTOR: ${{ github.actor }}
